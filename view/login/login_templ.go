// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package login

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/Jucaza1/goth-hotel-web/view/layout"
import "fmt"

func Show(server string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"loginForm\" class=\"flex flex-col max-w-sm mx-auto my-10 content-center\" hx-post=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%s%s", server, "/api/auth"))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `view/login/login.templ`, Line: 11, Col: 53}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-headers=\"{&#34;Content-Type&#34;: &#34;application/json&#34;}\" hx-target=\"#response\"><div class=\"size-40 my-10 mx-auto overflow-hidden object-scale-down\"><img class=\"h-full\" src=\"/public/img/utils/profile.svg\" alt=\"profile\"></div><div class=\"mb-5\"><label for=\"emailInput\" class=\"block mb-2 text-sm font-medium text-gray-900 \">Your email</label> <input type=\"email\" name=\"email\" id=\"emailInput\" class=\"shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" placeholder=\"example@mail.com\" required></div><div class=\"mb-5\"><label for=\"passwordInput\" class=\"block mb-2 text-sm font-medium text-gray-900 \">Your password</label> <input type=\"password\" name=\"password\" id=\"passwordInput\" class=\"shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \" required></div><span for=\"register\" class=\"ms-2 text-sm font-medium text-gray-900 \">New here?  <a href=\"/register\" class=\"text-blue-600 hover:underline \">Create an account</a></span> <button class=\"my-5 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center\">Submit </button> <img id=\"spinner\" class=\"htmx-indicator h-10 w-10 self-center\" src=\"/public/img/utils/spinner_1.svg\"></form><div id=\"response\"></div><script>\r\n\t\tconst getEmail = ()=>{\r\n\t\t\temailInput = document.getElementById(\"emailInput\")\r\n\t\t\tconsole.log(emailInput.value)\r\n\t\t\treturn emailInput.value\r\n\t\t}\r\n\t\tconst getPassword = ()=>{\r\n\t\t\tpasswordInput = document.getElementById(\"passwordInput\")\r\n\t\t\tconsole.log(passwordInput.value)\r\n\t\t\treturn passwordInput.value\r\n\t\t}\r\n\r\n\t\tdocument.body.addEventListener(\"htmx:beforeRequest\",(e)=>{\r\n\t\t\t\r\n\t\t\tconst xhr = e.detail.xhr;\r\n            const form = document.querySelector('#loginForm');\r\n            const formData = new FormData(form);\r\n\r\n            let json = {}\r\n            formData.forEach((value, key) => {\r\n                json[key] = value\r\n            })\r\n            const jsonString = JSON.stringify(json)\r\n\t\t\txhr.open()\r\n            xhr.send(jsonString)\r\n\r\n            \r\n\t\t})\r\n\r\n\t\tdocument.body.addEventListener(\"htmx:configRequest\",(e)=>{\r\n\t\t\tconst h = e.detail.headers\r\n\t\t\th['Content-Type']='application/json'\r\n\t\t\tconsole.log(h)\r\n\t\t\t\r\n\t\t})\r\n\r\n\t\tdocument.body.addEventListener(\"htmx:responseError\",(e)=>{\r\n\t\t\tconsole.log(\"htmx:responseError\")\r\n\t\t\tconst inputs = [document.getElementById(\"emailInput\"),document.getElementById(\"passwordInput\")]\r\n\t\t\tinputs.forEach(input =>{\r\n\t\t\t\tinput.style.outline= 'none !important'\r\n\t\t\t\tinput.style.border='1px solid red'\r\n\t\t\t\tinput.style.boxShadow='0 0 10px #719ECE'\r\n\t\t\t})\r\n\t\t\tif(document.getElementById(\"errorMsg\")!=undefined){\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconst errorMsg = document.createElement('span')\r\n\t\t\terrorMsg.id=\"errorMsg\"\r\n\t\t\terrorMsg.textContent = \"incorrect credentials\"\r\n\t\t\terrorMsg.style.color = \"red\"\r\n\t\t\terrorMsg.style.fontSize = \"12px\"\r\n\t\t\tinputs[1].insertAdjacentElement('afterend',errorMsg)\r\n\t\t})\r\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base("Login").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
